var irc = require('./irc');
var events = require('events');
var util = require('util');
var EventEmitter2 = require('eventemitter2').EventEmitter2;

function d(defaults, config) {
	for (var i in defaults) {
		if (Object.prototype.toString.call(defaults[i]) == '[object Object]') defaults[i] = (typeof config[i] !== 'undefined') ? d(defaults[i], config[i]) : defaults[i];
		else defaults[i] = (typeof config[i] !== 'undefined') ? config[i] : defaults[i];
	}
	return defaults;
}

function Bot(config) {
	config = d({
		server: 'irc.freenode.net',
		port: 6667,
		secure: false,
		nick: 'nIRC-bot',
		user: 'nIRC-bot',
		real: 'nIRC-bot',
		debug: false,
		plugins: {
			nickserv: {
				password: 'qwerty'
			},
			nick: {
				interval: 60
			},
			connection: {
				pingInterval: 120,
				pingTimeout: 60,
				reconnectIntervals: [5, 10, 30, 60],
				reconnectTimeout: 30,
				intervalResetTimeout: 3600
			},
			master: {
				timeout: 600,
				auths: []
			}
		}
	}, config);
	events.EventEmitter.call(this);

	this.config = config;
	this.client = new irc.Client(config.server, config.port, config.secure, config.debug);
	this.emitter = new EventEmitter2();

	this.initialized = false;
	this.Plugins = {};
}
util.inherits(Bot, events.EventEmitter);

Bot.prototype.__registerPlugins = function(plugins) {
	var self = this;
	this.emitter.onAny(function() {
		var args = Array.prototype.slice.call(arguments, 0);
		self.emit.apply(self, [this.event].concat(args));
	});

	for (var i in plugins) {
		var config = this.config.plugins[plugins[i].toLowerCase()];
		var plugin = require('./plugins/'+plugins[i].toLowerCase());
		this.Plugins[plugins[i]] = new plugin(this, config);
		this.Plugins[plugins[i]].init();
	}
};

Bot.prototype.__init = function() {
	this.__registerPlugins([
		'Connection',
		'Messages',
		'Nick',
		'NickServ',
		'Whois',
		'Master'
	]);
	this.initialized = true;
};

Bot.prototype.connect = function() {
	if (!this.initialized) this.__init();
	this.client.connect(this.config.nick, this.config.user, this.config.real);
};

Bot.prototype.say = function(to, message) {
	this.client.send('PRIVMSG', to, ':'+message);
};

Bot.prototype.notice = function(to, message) {
	this.client.send('NOTICE', to, ':'+message);
};

Bot.prototype.join = function(channel) {
	this.client.send('JOIN', channel);
};

Bot.prototype.whois = function(nick, callback) {
	return this.Plugins.Whois.whois(nick, callback);
};

module.exports = Bot;

function Whois(bot, config) {
	this.bot = bot;
	this.client = bot.client;
	this.emitter = bot.emitter;
	this.config = config;

	this.data = {};
	this.callbacks = {};
}

Whois.prototype.init = function() {
	var self = this;
	
	this.client.on('311', function() {
		var args = Array.prototype.slice.call(arguments, 0);
		self.__add(args[2], 'user', args[3]);
		self.__add(args[2], 'host', args[4]);
		self.__add(args[2], 'realname', args[6]);
	});

	this.client.on('312', function() {
		var args = Array.prototype.slice.call(arguments, 0);
		self.__add(args[2], 'server', args[3]);
		self.__add(args[2], 'serverinfo', args[4]);
	});

	this.client.on('313', function() {
		var args = Array.prototype.slice.call(arguments, 0);
		self.__add(args[2], 'operator', args[3]);
	});

	this.client.on('319', function() {
		var args = Array.prototype.slice.call(arguments, 0);
		if (typeof args[3] === 'undefined') self.__add(args[2], 'channels', []);
		else self.__add(args[2], 'channels', args[3].trim().split(/\s+/));
	});

	this.client.on('330', function() {
		var args = Array.prototype.slice.call(arguments, 0);
		self.__add(args[2], 'account', args[3]);
	});
	
	this.client.on('318', function() {
		var args = Array.prototype.slice.call(arguments, 0);
		self.emitter.emit('whois', args[2], self.__get(args[2]));
	});
};

Whois.prototype.__add = function(user, key, value) {
	if (typeof this.data[user] === 'undefined') this.data[user] = {};
	this.data[user][key] = value;
};

Whois.prototype.__get = function(user) {
	if (typeof this.data[user] === 'undefined') return {};
	var data = this.data[user];
	delete this.data[user];
	return data;
};

Whois.prototype.whois = function(nick, callback) {
	if (typeof callback === 'function') {
		var callbackFn = function(wnick, wuser) {
			if (wnick == nick) {
				this.removeListener('whois', callbackFn);
				callback(wuser);
			}
		};
		this.emitter.addListener('whois', callbackFn);
	}
	this.client.send('WHOIS', nick);
};

module.exports = Whois;

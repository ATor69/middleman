/*
 * --------------------
 * Application settings
 * --------------------
 */

"app": {
	"forever": true,
		(boolean)
		Puts the application in an endless loop, reviving it from the dead if it crashes.
		Let's face it, it's gonna crash - should be used in production, not in development.
		Will be ignored when running in a Windows-environment.

	"logColors": true,
		(boolean)
		Use colored loglevels in the log-files. Loglevels will always appear colored in
		console, regardless of this setting.

	"ircDebugging": false,
		(boolean)
		Show raw output from the IRC-module in console. Raw messages from the IRC-module
		will never appear in logfiles, regardless of this setting.

	"cleanLogs": 10
		(integer)
		How old, in days, a logfile gets to age before getting purged. Purge occurs
		every 24 hours, the first purge being 24 hours after application startup.
},


/*
 * ------------
 * PTP settings
 * ------------
 */

"ptp": {
	"username": "my_username",
		(string)
		Username on PTP

	"password": "my_password",
		(string)
		Password on PTP

	"passkey": "my_passkey",
		(string)
		Passkey on PTP

	"irckey": "my_irckey",
		(string)
		IRC-key on PTP


	/*
	 * Antitrump module settings
	 */
	"antitrump": {
		"enabled": false
			(boolean)
			Enables this module.

		"interval": 15,
			(integer)
			The interval, in minutes, to check for deleted snatches.

		"maxage": 86400,
			(integer)
			The maximum age, in seconds, of a torrent before it is considered too old.

		"maxtrumps": 3,
			(integer)
			The maximum amount a movie can be re-added before being ignored.

		"testmode": false
			(boolean)
			If enabled, no final commands will be sent to CouchPotato.
	},

	/*
	 * IRC-watch module settings
	 */
	"ircwatch": {
		"enabled": false,
			(boolean)
			Enables this module.

		"maxage": 1,
			(integer)
			Maximum age, in years, for an announce to be picked up and checked. If you
			only use CouchPotato for new movies, it's unnecessary to process announces
			for old releases. Does not apply to freeleech-torrents when freeleech-mode
			is enabled.

		"useIrcSSL": false,
			(boolean)
			Enables TLS and connects to the IRC server using the SSL port.

		"ignoreInvalidIrcSSL": false,
			(boolean)
			If the IRC server has an invalid SSL certificate when connecting securely,
			setting this options to true will ignore that and connect anyway.

		"nickname": "my_botnick",
			(string)
			IRC nickname. Needs to be registered with NickServ or grouped.

		"nickservPassword": "my_password",
			(string)
			NickServ password.

		"masterAuths": [""],
			(array)
			Whitelist of NickServ-auths who are allowed to execute commands on the bot.
			ex: ["myMaster"]					NickServ-auth "myMaster" is whitelisted.
			ex: ["myMaster", "otherMaster"]		Two NickServ-auths are whitelisted, etc.

		"masterTimeout": 600,
			(integer)
			Max inactivity, in seconds, before a master nick is unregistered with the bot.

		"freeleechDir": "/path/to/my/dir"
			(string)
			Absolute path to the destination where freeleech-torrents should be saved.
			ex: "/path/to/my/unix/style/dir"	UNIX-style path
			ex: "C:/my/windows/style/dir"		Windows-style path
			ex: "C:\\double\\backslash\\dir"	Backlashes needs to be escaped
	}
},


/*
 * ------------
 * BTN settings
 * ------------
 */

"btn": {
	"apikey": "my_apikey"
		(string)
		API-key on BTN

	/*
	 * IRC-watch module settings
	 */
	"ircwatch": {
		"enabled": false,
			(boolean)
			Enables this module.

		"allowForeign": false,
			(boolean)
			Should we notify SickBeard when there is a foreign release for an English show?

		"useIrcSSL": false,
			(boolean)
			Enables TLS and connects to the IRC server using the SSL port.

		"ignoreInvalidIrcSSL": false,
			(boolean)
			If the IRC server has an invalid SSL certificate when connecting securely,
			setting this options to true will ignore that and connect anyway.

		"nickname": "my_botnick",
			(string)
			IRC nickname. Needs to be registered with NickServ or grouped.

		"nickservPassword": "my_password",
			(string)
			NickServ password.

		"masterAuths": [""],
			(array)
			Whitelist of NickServ-auths who are allowed to execute commands on the bot.
			ex: ["myMaster"]					NickServ-auth "myMaster" is whitelisted.
			ex: ["myMaster", "otherMaster"]		Two NickServ-auths are whitelisted, etc.

		"masterTimeout": 600
			(integer)
			Max inactivity, in seconds, before a master nick is unregistered with the bot.
	}
},


/*
 * --------------------
 * CouchPotato settings
 * --------------------
 */

"cp": {
	"url": "http://<hostname>:<port>",
		(string)
		CouchPotato URL.

	"apikey": "my_apikey"
		(string)
		CouchPotato API-key.
},


/*
 * ------------------
 * SickBeard settings
 * ------------------
 */

"sb": {
	"ttl": 60,
		(integer)
		Time-To-Live for in-application SickBeard-cache.

	"url": "http://<sickbeard>:<port>",
		(string)
		SickBeard API-URL.

	"apikey": "my_apikey",
		(string)
		SickBeard API-key.

	"username": "my_username",
		(string)
		SickBeard username. Needed for running backlog-scans on shows, since it's not
		available from the API yet.

	"password": "my_password"
		(string)
		SickBeard password. Needed for running backlog-scans on shows, since it's not
		available from the API yet.
}


/*
 * -------------
 * HTTP settings
 * -------------
 */

"http": {
	"timeout": 30,
		(integer)
		HTTP request timeout in seconds

	"ignoreInvalidSSL": false
		(boolean)
		Ignores certificate warnings on HTTPS-requests. If you're running SickBeard or
		CouchPotato using a self-signed cert, you want this.
}
